{"version":3,"sources":["components/Header/Header.js","components/ProeficienciesResume/Item/Item.js","components/ProeficienciesResume/ProeficienciesResume.js","assets/HandTop.png","assets/HandBottom.png","components/Scroller/Scroller.js","components/HandScroll/HandScroll.js","components/Project/ProjectLink/ProjectLink.js","components/Project/Project.js","components/StatusScrollBar/StatusScrollBar.js","containers/Home/Home.js","assets/logo.svg","components/Abilities/Item/Item.js","components/Abilities/Abilities.js","components/Button/Button.js","components/Disciplines/Item/Item.js","components/Disciplines/Disciplines.js","assets/ProfilePhoto.png","components/ProfilePhoto/ProfilePhoto.js","components/SocialMedia/Item/Item.js","components/SocialMedia/SocialMedia.js","containers/AboutMe/AboutMe.js","assets/Kal/kal1.png","assets/Kal/kal-back.png","assets/Kal/KalContent1.jpg","assets/Kal/KalContent2.jpg","assets/Cremosos/cremosos1.png","assets/Cremosos/cremosos2.png","assets/Cremosos/cremosos-desk.png","assets/Cremosos/cremosos-back.png","assets/Cremosos/CremososContent1.jpg","assets/Cremosos/CremososContent2.jpg","assets/Medot/medot1.png","assets/Medot/medot2.png","assets/Medot/medot-back.png","containers/ProjectDetail/ProjectDetailHeader/ProjectDetailHeader.js","assets/Aventi/aventi1.png","assets/Aventi/aventi2.png","assets/Aventi/aventi3.png","containers/ProjectDetail/ProjectDetailed/ProjectDetailed.js","containers/ProjectDetail/ProjectDetail.js","App.js","reportWebVitals.js","index.js"],"names":["Header","logo","className","to","replace","src","alt","defaultProps","title","Item","icon","ProeficienciesResume","proeficiencies","map","item","id","Scroller","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","HandScroll","HandTop","HandBottom","ProjectLink","reference","href","arrowRightIcon","Project","name","tags","type","images","number","includes","penIcon","codeIcon","userIcon","image","url","StatusScrollBar","projects","Home","index","project_type","Abilities","abilities","Button","text","Disciplines","discplines","ProfilePhoto","photo","SocialMedia","socials","AboutMe","ProjectDetailHeader","socialMedia","ProjectDetailed","projectContent","content","ProjectDetail","useParams","filter","project","currentProject","backImage","App","useState","githubIcon","linkedinIcon","behanceIcon","happyIcon","clipboardIcon","annotationIcon","groupIcon","kal1","kal_back","figmaLogo","kal_content_1","kal_content_2","cremosos1","cremososdesk","cremosos2","cremosos_back","cremosos_content_1","cremosos_content_2","medot1","medot2","medot_back","exact","path","render","props","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.945cc3e6.chunk.js","sourcesContent":["import './Header.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Header = ({ logo }) => {\r\n    return (\r\n    <header className=\"header\">\r\n        <section className=\"header__logo\">\r\n            <Link to=\"/\" replace>\r\n                <img src={logo} alt=\"Cristian Rodríguez\"/>\r\n            </Link>\r\n        </section>\r\n        <nav className=\"navigation\">\r\n            <ul className=\"navigation__container\">\r\n                <li className=\"navigation__item\">\r\n                    <Link to=\"/about-me\" className=\"navigation__button\" replace>\r\n                        About Me\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker'\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header","import { Icon } from '@iconify/react';\r\n\r\nconst Item = ({ title, icon}) => {\r\n    return (\r\n        <section className=\"proeficiencies-resume__item\">\r\n            <Icon className=\"iconify proeficiencies-resume__item-icon\" icon={icon} />\r\n            <p className=\"proeficiencies-resume__item-title\">{title}</p>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Item\r\n","import './ProeficienciesResume.scss'\r\nimport Item from './Item/Item';\r\n\r\n\r\nconst ProeficienciesResume = ( { proeficiencies }) => {\r\n    return (\r\n        <article className=\"proeficiencies-resume\">\r\n            {proeficiencies.map((item) => (<Item key={item.id} icon={item.icon} title={item.title}/>))}\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default ProeficienciesResume\r\n","export default __webpack_public_path__ + \"static/media/HandTop.ab56eae1.png\";","export default __webpack_public_path__ + \"static/media/HandBottom.86704fdb.png\";","import './Scroller.scss';\r\n\r\nconst Scroller = () => {\r\n    return (\r\n        <article className=\"scroller\">\r\n            <svg className=\"scroller__outer\" width=\"151\" height=\"152\" viewBox=\"0 0 151 152\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M127.361 33.2C126.92 33.5915 126.395 33.8777 125.827 34.0371C125.259 34.1964 124.662 34.2248 124.081 34.12C122.898 33.9538 121.786 33.4582 120.871 32.69L120.781 32.61C120.691 32.51 120.781 32.01 121.111 31.12C121.248 30.5798 121.468 30.0639 121.761 29.59C121.761 29.59 121.871 29.59 121.941 29.59C122.412 29.9451 122.914 30.2564 123.441 30.52C123.701 30.6484 123.994 30.6951 124.282 30.6541C124.569 30.613 124.837 30.4861 125.051 30.29C125.384 29.9405 125.58 29.4823 125.601 29C125.741 27.95 125.821 27.38 125.841 27.28C126.022 26.5817 126.405 25.9521 126.941 25.47C127.344 25.1139 127.83 24.8656 128.355 24.7485C128.879 24.6313 129.425 24.649 129.941 24.8C130.992 25.0455 131.966 25.5432 132.781 26.25L132.891 26.36C132.951 26.42 132.891 26.52 132.891 26.65C132.681 27.05 132.341 27.83 131.891 29C131.895 29.0232 131.895 29.0468 131.891 29.07C131.878 29.0867 131.861 29.1001 131.842 29.1094C131.823 29.1186 131.802 29.1234 131.781 29.1234C131.76 29.1234 131.739 29.1186 131.72 29.1094C131.701 29.1001 131.684 29.0867 131.671 29.07C131.62 29.0064 131.574 28.9396 131.531 28.87L131.381 28.66C131.127 28.3684 130.799 28.1507 130.431 28.03C130.251 27.9543 130.053 27.9329 129.861 27.9685C129.669 28.004 129.492 28.0949 129.351 28.23C129.023 28.6072 128.826 29.0811 128.791 29.58C128.591 30.76 128.481 31.38 128.471 31.44C128.285 32.1241 127.898 32.737 127.361 33.2Z\" fill=\"white\"/>\r\n                <path d=\"M132.451 44.08C132.323 44.1395 132.18 44.157 132.041 44.13C131.227 44.0482 130.443 43.7801 129.749 43.3466C129.056 42.9131 128.471 42.3257 128.041 41.63C127.553 40.9539 127.218 40.1798 127.059 39.3613C126.901 38.5428 126.922 37.6996 127.121 36.89C127.548 35.2728 128.579 33.8807 130.001 33C131.357 32.0405 133.023 31.6231 134.671 31.83C135.482 31.9219 136.262 32.1941 136.954 32.6267C137.647 33.0593 138.233 33.6413 138.671 34.33C139.163 34.9929 139.508 35.7538 139.68 36.5613C139.853 37.3687 139.85 38.2039 139.671 39.01C139.652 39.1408 139.589 39.261 139.491 39.35C139.043 39.4645 138.583 39.5249 138.121 39.53C137.646 39.5788 137.167 39.5788 136.691 39.53C136.627 39.5189 136.569 39.483 136.531 39.43C136.512 39.2405 136.512 39.0495 136.531 38.86C136.58 38.4816 136.58 38.0984 136.531 37.72C136.477 37.2221 136.302 36.745 136.021 36.33C135.813 35.9929 135.527 35.71 135.188 35.5049C134.849 35.2997 134.466 35.1781 134.071 35.15C133.273 35.098 132.481 35.3242 131.831 35.79C131.147 36.2188 130.628 36.8677 130.361 37.63C130.236 38.0085 130.201 38.4113 130.26 38.8056C130.319 39.2 130.47 39.5749 130.701 39.9C130.978 40.3135 131.348 40.656 131.781 40.9C132.096 41.0813 132.431 41.2224 132.781 41.32C132.96 41.3591 133.134 41.4161 133.301 41.49C133.327 41.5542 133.327 41.6258 133.301 41.69C133.226 42.1321 133.126 42.5695 133.001 43C132.853 43.3768 132.669 43.7385 132.451 44.08Z\" fill=\"white\"/>\r\n                <path d=\"M135.321 55.15C135.321 55.15 135.231 55.15 135.161 55.03C135.091 54.91 134.801 54.33 134.441 53.52C134.216 53.0452 134.019 52.5577 133.851 52.06C133.842 51.9902 133.842 51.9197 133.851 51.85C133.868 51.7772 133.907 51.7111 133.961 51.66L134.741 50.89C135.181 50.45 135.821 49.77 136.671 48.89C136.748 48.7672 136.789 48.625 136.789 48.48C136.789 48.3349 136.748 48.1928 136.671 48.07C136.731 48.24 136.601 47.96 136.291 47.25C136.291 47.17 136.101 47.19 135.821 47.31C135.541 47.43 134.931 47.75 134.241 48.14C133.551 48.53 133.021 48.8 132.651 48.96C132.561 48.96 132.501 48.96 132.461 48.96L132.341 48.74C132.181 48.44 131.951 47.95 131.651 47.28C131.435 46.8254 131.248 46.3578 131.091 45.88C131.065 45.8136 131.066 45.7396 131.094 45.674C131.122 45.6084 131.175 45.5566 131.241 45.53C131.821 45.27 132.731 44.9 133.941 44.43C135.151 43.96 136.061 43.59 136.651 43.33C138.921 42.33 140.651 41.49 141.891 40.82H142.001C142.081 40.77 142.181 40.82 142.291 40.99C142.401 41.16 142.801 41.99 143.481 43.4C143.941 44.4 144.301 45.17 144.561 45.75C145.077 46.7896 145.252 47.9653 145.061 49.11C144.95 49.6712 144.698 50.195 144.329 50.6322C143.96 51.0695 143.486 51.4059 142.951 51.61C142.33 51.9232 141.647 52.094 140.951 52.11C140.27 52.0562 139.613 51.8327 139.041 51.46C138.901 51.38 138.791 51.35 138.721 51.39C138.651 51.43 138.191 52.01 137.131 53.26C136.583 53.9403 135.977 54.5726 135.321 55.15ZM141.001 48.58C141.276 48.4918 141.522 48.3293 141.711 48.1105C141.899 47.8918 142.024 47.6251 142.071 47.34C142.077 46.7513 141.936 46.1706 141.661 45.65C141.441 45.14 141.241 44.9 141.071 44.94C140.53 45.1277 139.999 45.3447 139.481 45.59L138.931 45.84L138.401 46.09C138.401 46.09 138.401 46.2 138.401 46.38C138.506 46.742 138.636 47.0962 138.791 47.44C139.371 48.61 140.091 49 141.001 48.58Z\" fill=\"white\"/>\r\n                <path d=\"M144.161 66.11C142.513 66.5405 140.761 66.2995 139.291 65.44C138.578 64.9973 137.959 64.4174 137.472 63.7338C136.984 63.0503 136.638 62.2767 136.452 61.458C136.266 60.6394 136.244 59.7919 136.388 58.9648C136.532 58.1377 136.839 57.3475 137.291 56.64C138.267 55.2572 139.717 54.2819 141.366 53.9001C143.015 53.5184 144.747 53.7568 146.231 54.57C146.947 55.0079 147.568 55.5846 148.057 56.2662C148.547 56.9477 148.895 57.7203 149.081 58.5385C149.268 59.3567 149.288 60.2039 149.142 61.0302C148.996 61.8565 148.686 62.6453 148.231 63.35C147.288 64.7675 145.827 65.7585 144.161 66.11ZM143.431 62.86C144.231 62.691 144.942 62.2359 145.431 61.58C145.676 61.2559 145.844 60.8808 145.924 60.4826C146.003 60.0843 145.992 59.6733 145.891 59.28C145.804 58.8863 145.628 58.5177 145.376 58.2023C145.125 57.8869 144.805 57.633 144.441 57.46C143.725 57.063 142.887 56.9488 142.091 57.14C141.29 57.3021 140.578 57.7544 140.091 58.41C139.851 58.7384 139.688 59.1164 139.614 59.5162C139.539 59.9159 139.555 60.3273 139.661 60.72C139.746 61.1145 139.92 61.4845 140.169 61.8016C140.419 62.1188 140.737 62.3747 141.101 62.55C141.811 62.9423 142.643 63.053 143.431 62.86Z\" fill=\"white\"/>\r\n                <path d=\"M138.341 76.4C138.341 75.9 138.341 75.24 138.281 74.4C138.281 73.35 138.231 72.69 138.221 72.4L138.131 69.78C138.131 69.51 138.131 69.14 138.131 68.64C138.131 68.47 138.241 68.38 138.391 68.37L141.261 68.26L144.131 68.15C144.811 68.15 145.821 68.04 147.181 67.93C148.541 67.82 149.541 67.75 150.181 67.72C150.311 67.72 150.381 67.8 150.391 67.97C150.401 68.14 150.391 68.41 150.391 68.76C150.391 69.11 150.391 69.37 150.391 69.54C150.391 69.71 150.391 70.02 150.461 70.4C150.531 70.78 150.521 71.06 150.531 71.25C150.541 71.44 150.531 71.39 150.371 71.39H150.261C149.151 71.39 147.501 71.39 145.261 71.39L142.941 71.5L141.301 71.59H141.091C141.021 71.59 140.981 71.65 140.961 71.73C140.941 71.81 140.961 71.81 140.961 71.96C140.961 72.49 141.051 73.27 141.161 74.32C141.271 75.37 141.331 76.15 141.361 76.68C141.361 76.84 141.301 76.92 141.171 76.93C140.304 76.9851 139.433 76.955 138.571 76.84C138.421 76.84 138.321 76.76 138.291 76.67C138.298 76.5784 138.315 76.4879 138.341 76.4Z\" fill=\"white\"/>\r\n                <path d=\"M137.541 85.75C137.591 85.25 137.671 84.59 137.771 83.75C137.891 82.7 137.971 82.05 138.001 81.75L138.291 79.13C138.291 78.87 138.361 78.5 138.441 78.01C138.445 77.9758 138.455 77.9426 138.472 77.9125C138.489 77.8823 138.511 77.8558 138.538 77.8344C138.565 77.813 138.596 77.7971 138.629 77.7878C138.662 77.7785 138.697 77.7758 138.731 77.78L141.591 78.09L144.441 78.4C145.121 78.46 146.131 78.54 147.441 78.63C148.751 78.72 149.811 78.8 150.491 78.87C150.621 78.87 150.671 78.97 150.661 79.15C150.651 79.33 150.661 79.58 150.561 79.93C150.461 80.28 150.471 80.53 150.451 80.7C150.431 80.87 150.451 81.18 150.401 81.56C150.351 81.94 150.401 82.23 150.351 82.42C150.301 82.61 150.281 82.54 150.171 82.53H150.061C148.968 82.35 147.328 82.11 145.141 81.81L142.831 81.58C142.081 81.5 141.541 81.45 141.191 81.43H141.001C140.967 81.4296 140.934 81.4416 140.908 81.4637C140.883 81.4858 140.866 81.5164 140.861 81.55C140.861 81.55 140.861 81.63 140.861 81.78C140.861 82.3 140.771 83.09 140.721 84.15C140.671 85.21 140.621 85.99 140.571 86.51C140.571 86.67 140.481 86.74 140.351 86.73C139.485 86.6532 138.628 86.4958 137.791 86.26C137.641 86.26 137.561 86.14 137.541 86.05C137.531 85.9503 137.531 85.8497 137.541 85.75Z\" fill=\"white\"/>\r\n                <path d=\"M138.761 104.14C137.196 103.619 135.885 102.526 135.091 101.08C134.719 100.4 134.497 99.6481 134.442 98.875C134.387 98.1019 134.499 97.3259 134.771 96.6001C134.871 96.2801 135.171 95.3901 135.681 93.9501C135.781 93.6801 135.931 93.2801 136.141 92.7401C136.351 92.2001 136.501 91.7901 136.591 91.5201C136.681 91.2501 136.741 91.3001 136.871 91.3501C137.471 91.5601 138.381 91.9101 139.581 92.3501C140.781 92.7901 141.691 93.1701 142.301 93.3501C142.911 93.5301 143.891 93.8801 145.181 94.2801C146.471 94.6801 147.421 94.9901 148.051 95.2101C148.171 95.2101 148.211 95.3501 148.171 95.5201C148.006 96.1978 147.802 96.8656 147.561 97.5201C146.961 99.2201 146.561 100.32 146.321 100.8C145.877 101.873 145.164 102.813 144.251 103.53C143.458 104.067 142.536 104.381 141.581 104.44C140.63 104.543 139.669 104.441 138.761 104.14ZM139.881 100.96C140.707 101.301 141.635 101.301 142.461 100.96C142.871 100.777 143.236 100.507 143.532 100.168C143.827 99.8297 144.045 99.4311 144.171 99.0001C144.471 98.1501 144.511 97.6801 144.281 97.6001L142.811 97.0701L141.351 96.5401C141.031 96.4201 140.541 96.2601 139.891 96.0501L138.431 95.5501C138.191 95.4701 137.921 95.8701 137.611 96.7501C137.442 97.1662 137.369 97.615 137.397 98.0633C137.424 98.5115 137.552 98.9479 137.771 99.3401C138.247 100.134 138.998 100.724 139.881 101V100.96Z\" fill=\"white\"/>\r\n                <path d=\"M131.571 116.44C130.106 115.594 129.03 114.209 128.571 112.58C128.361 111.766 128.314 110.919 128.435 110.087C128.555 109.255 128.84 108.456 129.273 107.735C129.706 107.015 130.278 106.388 130.956 105.89C131.634 105.393 132.404 105.036 133.221 104.84C134.883 104.515 136.606 104.817 138.059 105.686C139.512 106.556 140.592 107.932 141.091 109.55C141.309 110.361 141.362 111.208 141.246 112.04C141.13 112.872 140.849 113.672 140.418 114.393C139.987 115.114 139.415 115.741 138.737 116.237C138.059 116.733 137.289 117.088 136.471 117.28C135.639 117.471 134.778 117.495 133.937 117.351C133.096 117.207 132.292 116.897 131.571 116.44ZM133.291 113.59C133.988 114.026 134.821 114.19 135.631 114.05C136.032 113.987 136.413 113.834 136.746 113.602C137.078 113.37 137.354 113.065 137.551 112.71C137.762 112.367 137.891 111.981 137.93 111.581C137.968 111.18 137.913 110.776 137.771 110.4C137.51 109.626 136.986 108.967 136.29 108.54C135.594 108.112 134.77 107.942 133.961 108.06C133.565 108.138 133.19 108.3 132.862 108.535C132.534 108.77 132.259 109.072 132.057 109.421C131.854 109.77 131.728 110.159 131.688 110.56C131.647 110.962 131.693 111.367 131.821 111.75C132.066 112.525 132.59 113.181 133.291 113.59Z\" fill=\"white\"/>\r\n                <path d=\"M120.781 130.59C120.781 130.59 120.301 129.37 119.371 126.96C118.441 124.55 117.891 123.11 117.791 122.79C117.767 122.728 117.746 122.665 117.731 122.6C117.713 122.541 117.713 122.479 117.731 122.42C117.986 122.091 118.263 121.781 118.561 121.49C118.826 121.201 119.11 120.931 119.411 120.68L119.611 120.58H119.811L121.051 121.09L123.471 122.09L122.371 119.68C122.241 119.41 122.071 119.01 121.851 118.48C121.824 118.413 121.807 118.342 121.801 118.27C121.82 118.2 121.854 118.135 121.901 118.08C122.131 117.774 122.385 117.486 122.661 117.22C122.946 116.905 123.253 116.611 123.581 116.34C123.636 116.315 123.696 116.302 123.756 116.302C123.816 116.302 123.876 116.315 123.931 116.34C126.602 117.11 129.224 118.041 131.781 119.13C132.111 119.46 132.611 119.95 133.261 120.63C133.911 121.31 134.401 121.8 134.741 122.12C134.881 122.26 134.901 122.37 134.821 122.45C134.591 122.69 134.231 123.05 133.741 123.51C133.251 123.97 132.881 124.33 132.651 124.58C132.551 124.68 132.471 124.69 132.391 124.58C132.051 124.25 131.561 123.74 130.911 123.06C130.261 122.38 129.761 121.86 129.431 121.53C128.906 121.235 128.349 121 127.771 120.83C126.901 120.52 126.291 120.33 125.951 120.24C125.781 120.24 125.691 120.24 125.671 120.24C125.651 120.24 125.751 120.56 126.021 121.09C126.424 121.979 126.902 122.833 127.451 123.64C127.821 124.03 128.311 124.51 128.921 125.07C129.801 125.89 130.301 126.37 130.421 126.49C130.473 126.532 130.517 126.583 130.551 126.64C130.534 126.708 130.5 126.77 130.451 126.82C130.141 127.223 129.807 127.607 129.451 127.97C128.671 128.78 128.221 129.12 128.111 128.97C127.831 128.7 127.401 128.27 126.831 127.67C126.261 127.07 125.831 126.67 125.541 126.38L125.211 126.06C124.365 125.528 123.467 125.082 122.531 124.73C122.264 124.579 121.973 124.474 121.671 124.42C121.671 124.42 121.671 124.53 121.671 124.7C121.864 125.298 122.088 125.885 122.341 126.46C122.534 127.015 122.793 127.546 123.111 128.04C123.451 128.37 123.981 128.85 124.691 129.47C125.401 130.09 125.921 130.58 126.261 130.9C126.331 130.97 126.331 131.06 126.261 131.16C126.191 131.26 125.671 131.79 125.261 132.31C124.851 132.83 124.451 133.21 124.261 133.46C124.181 133.54 124.061 133.46 123.891 133.34C123.561 133.02 123.051 132.54 122.361 131.93C121.671 131.32 121.111 130.91 120.781 130.59Z\" fill=\"white\"/>\r\n                <path d=\"M111.171 141.9C110.811 141.34 110.291 140.48 109.611 139.32C108.921 138.17 108.401 137.32 108.041 136.74L104.891 131.88C104.801 131.75 104.831 131.64 104.971 131.54C105.154 131.429 105.331 131.309 105.501 131.18L106.031 130.82C106.222 130.696 106.419 130.583 106.621 130.48C106.891 130.33 107.091 130.22 107.211 130.14C107.331 130.06 107.461 130.14 107.691 130.14L112.131 131.77C112.771 132.01 113.721 132.35 114.991 132.77C115.047 132.782 115.105 132.782 115.161 132.77C115.176 132.739 115.184 132.705 115.184 132.67C115.184 132.635 115.176 132.601 115.161 132.57C114.791 132 114.221 131.15 113.451 130.03C112.681 128.91 112.111 128.03 111.741 127.49C111.631 127.32 111.641 127.19 111.741 127.1L114.291 125.45C114.319 125.427 114.352 125.411 114.387 125.403C114.422 125.395 114.459 125.395 114.494 125.404C114.529 125.412 114.561 125.429 114.589 125.453C114.616 125.477 114.637 125.507 114.651 125.54C115.001 126.07 115.491 126.89 116.131 128C116.771 129.11 117.271 129.93 117.611 130.46C117.951 130.99 118.551 131.86 119.331 132.96C120.111 134.06 120.671 134.88 121.031 135.44C121.101 135.55 121.031 135.66 120.851 135.79C120.671 135.92 120.231 136.22 119.851 136.53C119.761 136.6 119.591 136.76 119.331 137C119.169 137.171 118.988 137.322 118.791 137.45C118.731 137.45 118.591 137.45 118.361 137.37L113.171 135.37L111.091 134.6C111.017 134.568 110.937 134.551 110.856 134.551C110.775 134.551 110.695 134.568 110.621 134.6C110.561 134.6 110.621 134.85 110.901 135.24C111.181 135.63 111.761 136.51 112.491 137.51C113.221 138.51 113.751 139.28 114.091 139.8C114.211 139.98 114.221 140.11 114.091 140.17C113.801 140.36 113.361 140.66 112.781 141.07C112.201 141.48 111.781 141.78 111.471 141.97C111.361 142.09 111.271 142.05 111.171 141.9Z\" fill=\"white\"/>\r\n                <path d=\"M98.291 141.31C98.1809 141.058 98.124 140.785 98.124 140.51C98.124 140.235 98.1809 139.962 98.291 139.71C98.3972 139.458 98.5541 139.23 98.7519 139.041C98.9497 138.852 99.1842 138.705 99.441 138.61C99.6946 138.512 99.9655 138.467 100.237 138.477C100.509 138.488 100.776 138.553 101.021 138.67C101.272 138.782 101.498 138.943 101.685 139.144C101.872 139.345 102.017 139.582 102.111 139.84C102.32 140.349 102.32 140.921 102.111 141.43C102.005 141.68 101.849 141.905 101.653 142.092C101.457 142.28 101.225 142.425 100.971 142.52C100.72 142.629 100.449 142.685 100.176 142.685C99.9025 142.685 99.6319 142.629 99.381 142.52C99.1266 142.403 98.8988 142.235 98.7113 142.027C98.5239 141.819 98.3809 141.575 98.291 141.31Z\" fill=\"white\"/>\r\n                <path d=\"M76.7109 146.91C76.7109 146.91 77.0909 145.65 77.8709 143.19C78.6509 140.73 79.1109 139.26 79.2309 138.94C79.2496 138.878 79.273 138.818 79.3009 138.76C79.3009 138.76 79.3709 138.69 79.4609 138.66C79.8637 138.551 80.2753 138.477 80.6909 138.44C81.0782 138.38 81.4691 138.346 81.8609 138.34C81.9304 138.328 82.0015 138.328 82.0709 138.34C82.0709 138.34 82.1409 138.4 82.2109 138.49C82.2809 138.58 82.4709 138.94 82.8709 139.65L84.1309 141.95L84.7809 139.38C84.8409 139.08 84.9509 138.66 85.1109 138.11L85.2109 137.91C85.2692 137.873 85.3335 137.846 85.4009 137.83C86.1905 137.658 86.9935 137.554 87.8009 137.52C87.8614 137.533 87.9182 137.559 87.9668 137.597C88.0153 137.635 88.0544 137.684 88.0809 137.74C90.9609 142.12 92.4309 144.48 92.4709 144.81C92.5109 145.14 92.6109 145.97 92.7009 146.9C92.7909 147.83 92.8609 148.53 92.9209 149C92.9209 149.19 92.9209 149.29 92.7809 149.31L91.2709 149.46L89.7609 149.61C89.6209 149.61 89.5509 149.61 89.5309 149.47C89.4709 149.01 89.4009 148.3 89.3309 147.36C89.2609 146.42 89.1809 145.71 89.1209 145.25C88.898 144.688 88.6093 144.154 88.2609 143.66C87.7676 142.88 87.4176 142.35 87.2109 142.07C87.1009 141.93 87.0309 141.87 87.0009 141.87C86.8698 142.148 86.7853 142.445 86.7509 142.75C86.5117 143.695 86.3545 144.658 86.2809 145.63C86.2809 146.17 86.4109 146.85 86.5309 147.63C86.7109 148.82 86.8109 149.5 86.8309 149.68C86.8421 149.746 86.8421 149.814 86.8309 149.88C86.7739 149.92 86.7091 149.947 86.6409 149.96C86.1388 150.069 85.6315 150.153 85.1209 150.21C84.0109 150.36 83.4409 150.35 83.4209 150.21C83.4209 149.82 83.3109 149.21 83.2309 148.39C83.1509 147.57 83.0909 146.99 83.0309 146.58L83.0009 146.2C82.672 145.255 82.2464 144.347 81.7309 143.49C81.4609 142.96 81.3009 142.7 81.2609 142.71C81.2209 142.72 81.1809 142.79 81.1109 142.96C81.0409 143.13 80.8009 143.86 80.5509 144.75C80.3556 145.307 80.2247 145.884 80.1609 146.47C80.2209 146.94 80.3409 147.64 80.5009 148.57C80.6609 149.5 80.7809 150.2 80.8409 150.67C80.8409 150.77 80.7809 150.83 80.6609 150.85L79.1209 151.1C78.4409 151.21 77.9209 151.3 77.5809 151.34C77.4676 151.34 77.3976 151.23 77.3709 151.01C77.3109 150.56 77.2009 149.87 77.0509 149.01C76.9009 148.15 76.7709 147.37 76.7109 146.91Z\" fill=\"white\"/>\r\n                <path d=\"M62.3011 143.85C62.4218 142.152 63.209 140.57 64.4911 139.45C65.1375 138.91 65.8852 138.504 66.6904 138.257C67.4956 138.009 68.3421 137.925 69.1803 138.008C70.0185 138.092 70.8315 138.343 71.5717 138.745C72.312 139.147 72.9645 139.693 73.4911 140.35C74.4947 141.714 74.958 143.402 74.7918 145.088C74.6257 146.773 73.8418 148.338 72.5911 149.48C71.9501 150.031 71.2044 150.446 70.3987 150.7C69.593 150.955 68.7442 151.044 67.9032 150.961C67.0623 150.879 66.2467 150.628 65.5057 150.222C64.7646 149.816 64.1133 149.264 63.5911 148.6C62.5491 147.25 62.0852 145.542 62.3011 143.85ZM65.6111 144.2C65.5159 145.015 65.7222 145.837 66.1911 146.51C66.4224 146.841 66.7232 147.117 67.0724 147.319C67.4216 147.522 67.8108 147.645 68.2127 147.681C68.6147 147.718 69.0197 147.666 69.3995 147.529C69.7792 147.392 70.1245 147.174 70.4111 146.89C70.9971 146.324 71.3532 145.562 71.4111 144.75C71.5202 143.94 71.3203 143.119 70.8511 142.45C70.6129 142.123 70.3075 141.852 69.9555 141.653C69.6034 141.454 69.2129 141.334 68.8102 141.299C68.4076 141.263 68.0021 141.315 67.621 141.45C67.2399 141.585 66.8922 141.8 66.6011 142.08C66.024 142.643 65.672 143.396 65.6111 144.2Z\" fill=\"white\"/>\r\n                <path d=\"M52.0812 134.56C52.0812 134.56 52.1612 134.51 52.2812 134.56C52.829 134.672 53.3699 134.816 53.9012 134.99C54.404 135.124 54.8982 135.287 55.3812 135.48C55.4546 135.503 55.5227 135.54 55.5812 135.59C55.5812 135.59 55.6312 135.68 55.6512 135.79C55.6712 135.9 55.7012 136.4 55.7312 136.88C55.7612 137.36 55.8812 138.43 56.0212 139.67C56.0212 139.92 56.2612 140.11 56.6112 140.24C56.4512 140.18 56.7412 140.24 57.4912 140.48C57.5712 140.48 57.6612 140.37 57.7412 140.08C57.8212 139.79 57.9912 139.08 58.1412 138.34C58.2912 137.6 58.4312 136.98 58.5512 136.6C58.5512 136.51 58.6212 136.46 58.6712 136.46H58.9112C59.2512 136.53 59.7712 136.68 60.4712 136.88C60.9627 137.007 61.444 137.171 61.9112 137.37C61.9761 137.393 62.0293 137.44 62.0593 137.502C62.0893 137.564 62.0936 137.635 62.0712 137.7C61.8912 138.32 61.5812 139.24 61.1512 140.47C60.7212 141.7 60.4212 142.63 60.2312 143.25C59.5646 145.63 59.0679 147.5 58.7412 148.86V148.98C58.7412 149.08 58.6112 149.11 58.4212 149.09C58.2312 149.07 57.3512 148.85 55.8112 148.43C54.8112 148.15 53.9312 147.91 53.3212 147.73C52.1946 147.451 51.1859 146.82 50.4412 145.93C50.0874 145.48 49.8525 144.949 49.7581 144.384C49.6637 143.82 49.713 143.241 49.9012 142.7C50.077 142.02 50.3976 141.385 50.8412 140.84C51.3276 140.37 51.9216 140.027 52.5712 139.84C52.7212 139.78 52.8112 139.72 52.8412 139.64C52.8712 139.56 52.7012 138.84 52.4312 137.22C52.2442 136.344 52.1272 135.455 52.0812 134.56ZM53.3812 143.17C53.2696 143.437 53.2339 143.729 53.278 144.015C53.3221 144.301 53.4444 144.569 53.6312 144.79C54.0696 145.179 54.5994 145.451 55.1712 145.58C55.7112 145.74 56.0212 145.74 56.1012 145.58C56.3115 145.044 56.4918 144.496 56.6412 143.94C56.6412 143.81 56.7312 143.62 56.8012 143.37C56.8712 143.12 56.9212 142.93 56.9612 142.8C57.0012 142.67 56.8912 142.72 56.7212 142.64C56.3781 142.481 56.0238 142.347 55.6612 142.24C54.4312 141.89 53.6712 142.19 53.3812 143.17Z\" fill=\"white\"/>\r\n                <path d=\"M41.791 129.85C41.8303 129.75 41.9019 129.666 41.9943 129.612C42.0867 129.558 42.1947 129.536 42.301 129.55C42.7498 129.686 43.1824 129.87 43.591 130.1C44.0678 130.327 44.5259 130.591 44.961 130.89C45.0539 130.948 45.1352 131.023 45.201 131.11C45.2256 131.212 45.2256 131.318 45.201 131.42C45.201 132.31 45.261 133.21 45.281 134.1C45.2864 134.913 45.3465 135.725 45.461 136.53C46.131 136.61 46.461 136.6 46.531 136.53C46.731 136.14 47.011 135.53 47.381 134.73C47.751 133.93 48.031 133.32 48.231 132.92C48.2422 132.885 48.2603 132.853 48.2842 132.826C48.308 132.799 48.3372 132.776 48.3698 132.761C48.4025 132.745 48.4381 132.736 48.4744 132.734C48.5106 132.732 48.5469 132.737 48.581 132.75C49.0943 132.946 49.5952 133.173 50.081 133.43C50.5385 133.644 50.9796 133.891 51.401 134.17C51.4608 134.206 51.5052 134.262 51.5255 134.329C51.5459 134.395 51.5407 134.467 51.511 134.53C51.221 135.1 50.771 135.94 50.141 137.05C49.511 138.16 49.051 139 48.771 139.58C48.491 140.16 48.031 141.11 47.471 142.35C46.911 143.59 46.471 144.52 46.171 145.13C46.1628 145.154 46.1492 145.176 46.1313 145.194C46.1134 145.213 46.0917 145.226 46.0677 145.235C46.0437 145.244 46.018 145.247 45.9926 145.244C45.9672 145.242 45.9428 145.233 45.921 145.22L45.201 144.82L44.481 144.43L43.721 144.08C43.381 143.93 43.131 143.82 42.971 143.73C42.811 143.64 42.861 143.62 42.911 143.52C43.101 143.14 43.411 142.52 43.851 141.8C44.291 141.08 44.591 140.46 44.791 140.07C44.991 139.68 45.001 139.34 44.791 139.21C44.2763 138.923 43.6703 138.848 43.101 139C42.5521 139.237 42.0532 139.577 41.631 140C41.211 140.42 40.5444 141.03 39.631 141.83C39.5637 141.877 39.4833 141.903 39.401 141.903C39.3187 141.903 39.2384 141.877 39.171 141.83L38.571 141.49L37.971 141.16L37.331 140.86L36.691 140.56C36.6648 140.55 36.6413 140.534 36.622 140.513C36.6027 140.493 36.5883 140.468 36.5797 140.441C36.5711 140.415 36.5685 140.386 36.5722 140.358C36.5759 140.33 36.5857 140.304 36.601 140.28C36.8897 139.878 37.2254 139.512 37.601 139.19C39.251 137.53 40.601 136.67 41.701 136.6C41.921 136.6 42.051 136.55 42.081 136.49C42.111 136.43 41.991 135.49 41.821 133.41C41.629 132.232 41.6189 131.031 41.791 129.85Z\" fill=\"white\"/>\r\n                <path d=\"M31.0711 129.23C31.236 129.011 31.4431 128.828 31.6801 128.69C31.9171 128.553 32.1793 128.464 32.4511 128.43C32.7222 128.389 32.9988 128.405 33.2637 128.475C33.5286 128.546 33.7762 128.67 33.9911 128.84C34.2058 129.008 34.3839 129.218 34.5146 129.457C34.6453 129.696 34.7258 129.959 34.7511 130.23C34.8111 130.777 34.6558 131.327 34.3179 131.762C33.9801 132.196 33.4863 132.483 32.9411 132.56C32.6716 132.599 32.3969 132.583 32.1338 132.513C31.8707 132.442 31.6248 132.319 31.4111 132.15C31.1939 131.985 31.0127 131.778 30.8786 131.541C30.7444 131.303 30.6602 131.041 30.6311 130.77C30.5944 130.497 30.6145 130.219 30.6902 129.954C30.766 129.689 30.8956 129.443 31.0711 129.23Z\" fill=\"white\"/>\r\n                <path d=\"M24.0712 118.91C24.5029 118.507 25.0209 118.207 25.5858 118.034C26.1506 117.861 26.7475 117.818 27.3312 117.91C28.5145 118.063 29.6324 118.541 30.5612 119.29L30.6512 119.37C30.7378 119.47 30.6378 119.97 30.3512 120.87C30.2245 121.412 30.0082 121.929 29.7112 122.4C29.7112 122.4 29.6112 122.4 29.5312 122.4C29.0629 122.047 28.5603 121.742 28.0312 121.49C27.7668 121.366 27.4716 121.324 27.1831 121.368C26.8946 121.413 26.6259 121.542 26.4112 121.74C26.0885 122.102 25.9012 122.565 25.8812 123.05C25.7712 124.05 25.7012 124.67 25.6712 124.77C25.5062 125.471 25.1332 126.105 24.6012 126.59C24.2038 126.956 23.7197 127.214 23.1947 127.34C22.6697 127.466 22.1212 127.455 21.6012 127.31C20.5463 127.083 19.5638 126.598 18.7412 125.9L18.6312 125.8C18.5712 125.74 18.5812 125.64 18.6312 125.5C18.8412 125.1 19.1712 124.31 19.6312 123.15C19.6312 123.15 19.6312 123.08 19.6812 123.07C19.6943 123.053 19.711 123.04 19.73 123.031C19.7491 123.021 19.77 123.017 19.7912 123.017C19.8124 123.017 19.8333 123.021 19.8523 123.031C19.8714 123.04 19.8881 123.053 19.9012 123.07L20.0412 123.26C20.0832 123.335 20.1335 123.406 20.1912 123.47C20.4588 123.765 20.8061 123.977 21.1912 124.08C21.3707 124.152 21.5674 124.171 21.7573 124.134C21.9473 124.096 22.1223 124.005 22.2612 123.87C22.5819 123.486 22.7712 123.009 22.8012 122.51C22.9812 121.33 23.0812 120.71 23.0912 120.65C23.2457 119.989 23.5856 119.385 24.0712 118.91Z\" fill=\"white\"/>\r\n                <path d=\"M18.8211 108.14C18.944 108.076 19.0848 108.055 19.2211 108.08C20.029 108.153 20.8094 108.41 21.5027 108.831C22.196 109.253 22.7838 109.827 23.2211 110.51C23.723 111.178 24.0727 111.947 24.2454 112.764C24.4182 113.581 24.4099 114.426 24.2211 115.24C23.8377 116.887 22.8304 118.321 21.4111 119.24C20.0707 120.22 18.4117 120.663 16.7611 120.48C15.9452 120.395 15.1588 120.128 14.4597 119.698C13.7605 119.269 13.1665 118.689 12.7211 118C12.2135 117.346 11.8525 116.591 11.6627 115.785C11.4729 114.979 11.4587 114.142 11.6211 113.33C11.6399 113.199 11.7035 113.079 11.8011 112.99C12.2479 112.868 12.708 112.801 13.1711 112.79C13.6419 112.729 14.117 112.709 14.5911 112.73C14.6567 112.745 14.714 112.784 14.7511 112.84C14.7799 113.026 14.7799 113.214 14.7511 113.4C14.7063 113.779 14.7063 114.161 14.7511 114.54C14.8154 115.039 14.9971 115.515 15.2811 115.93C15.4994 116.266 15.7948 116.544 16.1427 116.743C16.4907 116.941 16.881 117.053 17.2811 117.07C18.0765 117.111 18.8614 116.874 19.5011 116.4C20.1798 115.959 20.6877 115.299 20.9411 114.53C21.0623 114.152 21.0919 113.752 21.0276 113.36C20.9633 112.969 20.8068 112.599 20.5711 112.28C20.2848 111.868 19.9087 111.526 19.4711 111.28C19.1542 111.109 18.8187 110.975 18.4711 110.88C18.2923 110.847 18.1178 110.793 17.9511 110.72C17.9379 110.688 17.9311 110.654 17.9311 110.62C17.9311 110.586 17.9379 110.552 17.9511 110.52C17.9511 110.38 18.1411 109.97 18.4211 109.27C18.5107 108.879 18.6449 108.5 18.8211 108.14Z\" fill=\"white\"/>\r\n                <path d=\"M15.7712 97.1C15.7712 97.1 15.8512 97.1 15.9212 97.22C16.1973 97.7065 16.4477 98.2072 16.6712 98.72C16.8985 99.1895 17.1021 99.6701 17.2812 100.16C17.295 100.233 17.295 100.307 17.2812 100.38C17.2668 100.452 17.2321 100.518 17.1812 100.57L16.4112 101.35C15.9812 101.8 15.3412 102.49 14.5112 103.41C14.435 103.533 14.3947 103.675 14.3947 103.82C14.3947 103.965 14.435 104.107 14.5112 104.23C14.6561 104.496 14.7863 104.77 14.9012 105.05C14.9012 105.12 15.0912 105.05 15.3612 104.98C15.6312 104.91 16.2512 104.53 16.9412 104.13C17.4498 103.82 17.9738 103.537 18.5112 103.28C18.6012 103.28 18.6612 103.28 18.7012 103.28L18.8212 103.49C18.9912 103.8 19.2312 104.28 19.5312 104.94C19.7616 105.392 19.9588 105.86 20.1212 106.34C20.1343 106.371 20.1411 106.405 20.1412 106.439C20.1412 106.474 20.1346 106.507 20.1216 106.539C20.1086 106.571 20.0895 106.599 20.0654 106.623C20.0413 106.648 20.0127 106.667 19.9812 106.68C19.4012 106.95 18.5012 107.34 17.2912 107.83C16.0812 108.32 15.1912 108.7 14.6012 108.97C12.3512 109.97 10.6012 110.88 9.41116 111.56L9.30116 111.62C9.21116 111.62 9.11116 111.62 9.00116 111.46C8.89116 111.3 8.48116 110.46 7.77116 109.06C7.30116 108.06 6.92116 107.31 6.65116 106.73C6.12177 105.698 5.92941 104.527 6.10116 103.38C6.20604 102.817 6.45051 102.29 6.81217 101.846C7.17383 101.402 7.64111 101.056 8.17116 100.84C8.79147 100.522 9.47436 100.344 10.1712 100.32C10.8527 100.356 11.5137 100.566 12.0912 100.93C12.1381 100.964 12.1917 100.988 12.2486 101C12.3055 101.013 12.3643 101.012 12.4212 101C12.4212 101 12.9312 100.37 13.9712 99.1C14.5113 98.3818 15.1136 97.7125 15.7712 97.1ZM10.1612 103.76C9.88912 103.85 9.6472 104.014 9.46198 104.232C9.27675 104.451 9.15537 104.717 9.11116 105C9.11382 105.587 9.26154 106.164 9.54116 106.68C9.77116 107.19 9.98116 107.42 10.1412 107.38C10.685 107.191 11.2161 106.967 11.7312 106.71L12.2712 106.45L12.8012 106.19C12.8012 106.19 12.8012 106.08 12.8012 105.9C12.6919 105.558 12.5583 105.223 12.4012 104.9C11.8212 103.7 11.0912 103.33 10.1612 103.76Z\" fill=\"white\"/>\r\n                <path d=\"M6.75098 86.28C8.39184 85.826 10.1456 86.038 11.631 86.87C12.3648 87.2841 13.0031 87.848 13.5045 88.5251C14.0059 89.2022 14.3591 89.9774 14.541 90.8C14.7672 91.6137 14.8174 92.4663 14.688 93.3009C14.5587 94.1355 14.2529 94.933 13.791 95.64C12.8788 97.066 11.4418 98.0755 9.79098 98.45C8.14589 98.9061 6.38703 98.6903 4.90098 97.85C4.17167 97.4298 3.53445 96.867 3.0273 96.1952C2.52015 95.5234 2.15346 94.7563 1.94909 93.9398C1.74472 93.1232 1.70686 92.2739 1.83775 91.4424C1.96865 90.6109 2.26563 89.8143 2.71098 89.1C3.63463 87.6655 5.086 86.6525 6.75098 86.28ZM7.53098 89.52C6.72208 89.693 6.00801 90.1643 5.53098 90.84C5.29723 91.1657 5.13666 91.538 5.06029 91.9316C4.98393 92.3251 4.99357 92.7304 5.08856 93.1199C5.18354 93.5093 5.36163 93.8736 5.6106 94.1878C5.85957 94.502 6.17354 94.7586 6.53098 94.94C7.28737 95.3494 8.17401 95.4463 9.00098 95.21C9.80794 95.0449 10.5225 94.5805 11.001 93.91C11.2256 93.5756 11.3765 93.1973 11.4437 92.8001C11.5109 92.4029 11.4928 91.996 11.3906 91.6063C11.2885 91.2167 11.1046 90.8532 10.8512 90.5401C10.5979 90.2269 10.2808 89.9712 9.92098 89.79C9.18755 89.3997 8.33302 89.3031 7.53098 89.52Z\" fill=\"white\"/>\r\n                <path d=\"M12.4011 75.93C12.4011 76.43 12.4711 77.09 12.5011 77.93C12.5011 78.93 12.5711 79.64 12.5811 79.93L12.7211 82.55C12.7406 82.9264 12.7406 83.3036 12.7211 83.68C12.7211 83.86 12.6211 83.95 12.4711 83.96L9.60108 84.12C8.33108 84.18 7.37108 84.23 6.74108 84.28C6.11108 84.33 5.04108 84.41 3.69108 84.54C2.34108 84.67 1.33108 84.76 0.691078 84.8C0.561078 84.8 0.491078 84.73 0.481078 84.55C0.471078 84.37 0.481078 84.12 0.481078 83.77C0.481078 83.42 0.481078 83.16 0.481078 82.99C0.481078 82.82 0.481078 82.51 0.391078 82.13C0.301078 81.75 0.321078 81.47 0.301078 81.27C0.281078 81.07 0.301078 81.14 0.461078 81.14H0.531078C1.63108 81.14 3.29108 81.14 5.53108 81.05L7.84108 80.9L9.48108 80.79H9.69108C9.76108 80.79 9.80108 80.79 9.81108 80.65C9.82108 80.51 9.81108 80.57 9.81108 80.43C9.81108 79.9 9.69108 79.11 9.57108 78.07C9.45108 77.03 9.36108 76.24 9.33108 75.71C9.33108 75.55 9.38108 75.47 9.51108 75.46C10.3755 75.372 11.2466 75.372 12.1111 75.46C12.2711 75.46 12.3611 75.53 12.4011 75.62C12.4095 75.7232 12.4095 75.8269 12.4011 75.93Z\" fill=\"white\"/>\r\n                <path d=\"M13.0511 66.56C13.0511 67.07 12.9411 67.72 12.8611 68.56C12.7511 69.56 12.6811 70.27 12.6511 70.56L12.4111 73.18C12.4111 73.44 12.3511 73.82 12.2811 74.31C12.2774 74.3442 12.2669 74.3774 12.2502 74.4075C12.2336 74.4377 12.2111 74.4642 12.1842 74.4856C12.1572 74.507 12.1262 74.5229 12.0931 74.5322C12.0599 74.5415 12.0253 74.5442 11.9911 74.54L9.13107 74.2C7.86107 74.07 6.91108 73.99 6.27108 73.93C5.63108 73.87 4.58107 73.82 3.27108 73.75C1.96108 73.68 0.851075 73.62 0.171075 73.56C0.0510751 73.56 -0.0089249 73.46 0.0010751 73.29L0.0910751 72.5C0.141075 72.16 0.171075 71.9 0.181075 71.73C0.191075 71.56 0.181075 71.25 0.181075 70.87C0.181075 70.49 0.181075 70.2 0.181075 70.01C0.181075 69.82 0.241075 69.88 0.351075 69.9H0.471075C1.56108 70.06 3.20108 70.27 5.40108 70.53L7.71108 70.73L9.35108 70.85H9.56108C9.59499 70.8504 9.62787 70.8384 9.65362 70.8163C9.67937 70.7942 9.69623 70.7636 9.70107 70.73C9.70107 70.73 9.70107 70.65 9.70107 70.5C9.70107 69.98 9.78108 69.19 9.81108 68.14C9.84107 67.09 9.87107 66.3 9.92107 65.77C9.92107 65.61 10.0011 65.54 10.1411 65.55C11.0412 65.6051 11.9329 65.756 12.8011 66C12.9511 66 13.0411 66.11 13.0611 66.2C13.0723 66.32 13.069 66.4408 13.0511 66.56Z\" fill=\"white\"/>\r\n                <path d=\"M11.531 48.19C13.1083 48.6836 14.4407 49.7553 15.261 51.19C15.6408 51.8643 15.8721 52.6119 15.9393 53.3829C16.0066 54.1538 15.9083 54.9302 15.651 55.66C15.551 55.9867 15.261 56.8767 14.781 58.33C14.691 58.6 14.541 59.01 14.351 59.55C14.161 60.09 14.001 60.55 13.911 60.77C13.821 60.99 13.771 60.99 13.641 60.95C13.0277 60.75 12.1177 60.4167 10.911 59.95C9.70101 59.5 8.79101 59.17 8.17101 58.95C7.55101 58.73 6.57101 58.44 5.28101 58.07C3.99101 57.7 3.00101 57.4 2.39101 57.19C2.27101 57.19 2.23101 57.05 2.26101 56.88C2.35101 56.47 2.54101 55.82 2.84101 54.88C3.41101 53.16 3.84101 52.06 4.03101 51.57C4.4506 50.4941 5.13922 49.5438 6.03101 48.81C6.80986 48.2473 7.72455 47.9021 8.68101 47.81C9.64734 47.728 10.6199 47.8577 11.531 48.19ZM10.471 51.38C10.0568 51.2232 9.61575 51.1495 9.17305 51.1632C8.73035 51.177 8.2947 51.2778 7.89101 51.46C7.48493 51.639 7.12361 51.9059 6.8331 52.2413C6.54259 52.5768 6.33012 52.9725 6.21101 53.4C5.93101 54.25 5.90101 54.72 6.13101 54.8L7.60101 55.31L9.07101 55.82L10.531 56.28L12.001 56.75C12.241 56.83 12.511 56.43 12.811 55.54C12.9646 55.1272 13.0254 54.6856 12.9892 54.2466C12.9529 53.8076 12.8203 53.382 12.601 53C12.1165 52.2145 11.3574 51.6371 10.471 51.38Z\" fill=\"white\"/>\r\n                <path d=\"M18.541 35.76C20.0409 36.5685 21.1592 37.9386 21.651 39.57C21.8727 40.3797 21.9313 41.2253 21.8236 42.0578C21.7158 42.8903 21.4438 43.6931 21.0233 44.4197C20.6028 45.1462 20.0422 45.782 19.3741 46.2902C18.7059 46.7984 17.9435 47.1688 17.131 47.38C15.4775 47.7781 13.7336 47.5048 12.281 46.62C10.7834 45.804 9.66639 44.432 9.17104 42.8C8.94214 41.9923 8.87751 41.1468 8.98099 40.3137C9.08446 39.4806 9.35393 38.6767 9.77346 37.9495C10.193 37.2223 10.7541 36.5866 11.4235 36.08C12.093 35.5734 12.8572 35.2061 13.671 35C15.3311 34.6008 17.0816 34.874 18.541 35.76ZM16.861 38.63C16.1617 38.2004 15.3261 38.0505 14.521 38.21C14.1238 38.2838 13.7474 38.4436 13.4185 38.6783C13.0895 38.9129 12.8158 39.2167 12.6167 39.5683C12.4175 39.9199 12.2977 40.3108 12.2657 40.7136C12.2336 41.1164 12.29 41.5213 12.431 41.9C12.7058 42.669 13.2415 43.3174 13.945 43.7321C14.6485 44.1469 15.4751 44.3018 16.281 44.17C16.68 44.0909 17.0564 43.9243 17.3833 43.6822C17.7101 43.4402 17.9791 43.1286 18.171 42.77C18.3724 42.4214 18.4939 42.0325 18.5268 41.6313C18.5596 41.2302 18.503 40.8267 18.361 40.45C18.0998 39.6807 17.5663 39.0334 16.861 38.63Z\" fill=\"white\"/>\r\n                <path d=\"M29.0711 21.46C29.0711 21.46 29.5711 22.68 30.5411 25.08C31.5111 27.48 32.0811 28.9 32.1911 29.22C32.2173 29.2812 32.2374 29.3448 32.2511 29.41C32.2675 29.4655 32.2675 29.5245 32.2511 29.58C32.0025 29.9329 31.7285 30.2672 31.4311 30.58C31.1782 30.8764 30.9005 31.1507 30.6011 31.4L30.4011 31.51H30.2011C30.1311 31.51 29.7111 31.34 28.9511 31.03L26.5111 30.03L27.6511 32.42C27.7911 32.69 27.9711 33.09 28.2011 33.61C28.2248 33.6815 28.2416 33.7552 28.2511 33.83C28.234 33.8977 28.1995 33.9598 28.1511 34.01C27.922 34.3205 27.6713 34.6146 27.4011 34.89C27.1222 35.2073 26.8215 35.5047 26.5011 35.78C26.447 35.8081 26.387 35.8227 26.3261 35.8227C26.2652 35.8227 26.2051 35.8081 26.1511 35.78C21.1311 34.24 18.5011 33.3533 18.2611 33.12C17.9211 32.8 17.4211 32.31 16.7611 31.65C16.1011 30.99 15.5911 30.5 15.2511 30.18C15.1111 30.0533 15.0811 29.9433 15.1611 29.85C15.3911 29.61 15.7411 29.25 16.2311 28.78C16.7211 28.31 17.0711 27.94 17.3011 27.69C17.5311 27.44 17.4811 27.58 17.5611 27.69C17.9011 28.01 18.4111 28.51 19.0711 29.19C19.7311 29.87 20.2311 30.36 20.5711 30.68C21.0974 30.9751 21.6583 31.2035 22.2411 31.36C23.1211 31.66 23.7311 31.84 24.0611 31.92C24.2411 31.92 24.3311 31.92 24.3511 31.92C24.2771 31.6208 24.152 31.3366 23.9811 31.08C23.5664 30.2003 23.0779 29.3573 22.5211 28.56C22.1411 28.1667 21.6411 27.6967 21.0211 27.15L19.4411 25.7C19.3611 25.62 19.3211 25.57 19.3211 25.54C19.3211 25.51 19.3211 25.45 19.4111 25.36C19.7242 24.9564 20.058 24.5692 20.4111 24.2C21.1811 23.38 21.6211 23.02 21.7311 23.13C22.0211 23.4 22.4611 23.83 23.0411 24.41C23.6211 24.99 24.0411 25.41 24.3511 25.69L24.6811 25.99C25.5318 26.5164 26.4371 26.9489 27.3811 27.28C27.6533 27.4255 27.947 27.5268 28.2511 27.58C28.2511 27.58 28.2511 27.47 28.2011 27.3C27.9953 26.7079 27.7583 26.1271 27.4911 25.56C27.2924 25.0116 27.0306 24.488 26.7111 24C26.3611 23.68 25.8311 23.21 25.1111 22.6C24.3911 21.99 23.8611 21.52 23.5111 21.2C23.4411 21.12 23.4411 21.04 23.5111 20.94C23.7411 20.69 24.0911 20.3 24.5111 19.77C24.9311 19.24 25.3111 18.85 25.5111 18.6C25.5911 18.52 25.7111 18.6 25.8811 18.72C26.2211 19.04 26.7411 19.5 27.4411 20.1C28.2211 20.69 28.7411 21.15 29.0711 21.46Z\" fill=\"white\"/>\r\n                <path d=\"M38.5111 9.99998C38.8811 10.56 39.4211 11.4 40.1211 12.55C40.8211 13.7 41.3511 14.55 41.7311 15.1L45.0011 19.9C45.0225 19.9261 45.0376 19.9568 45.0452 19.9897C45.0528 20.0226 45.0528 20.0568 45.045 20.0897C45.0373 20.1226 45.0221 20.1533 45.0006 20.1793C44.9791 20.2054 44.9519 20.2261 44.9211 20.24L44.4011 20.61L43.8811 20.98C43.6912 21.1076 43.4942 21.2245 43.2911 21.33C43.0917 21.4399 42.8981 21.5601 42.7111 21.69C42.5564 21.7483 42.3858 21.7483 42.2311 21.69L37.7111 20.1C37.0711 19.87 36.1111 19.55 34.8411 19.1C34.785 19.0884 34.7272 19.0884 34.6711 19.1C34.6561 19.1312 34.6482 19.1653 34.6482 19.2C34.6482 19.2346 34.6561 19.2688 34.6711 19.3C35.0511 19.87 35.6711 20.7 36.4211 21.81C37.1711 22.92 37.7911 23.76 38.1711 24.32C38.2778 24.4933 38.2778 24.6233 38.1711 24.71L35.6511 26.4C35.6231 26.4234 35.5901 26.4401 35.5547 26.4488C35.5192 26.4575 35.4823 26.458 35.4466 26.4503C35.4109 26.4426 35.3775 26.4269 35.3488 26.4043C35.3201 26.3817 35.297 26.3529 35.2811 26.32C35.0011 25.8 34.4411 25 33.7811 23.9C33.1211 22.8 32.6211 22 32.2611 21.46C31.9011 20.92 31.2611 20.08 30.5111 18.99C29.7611 17.9 29.1311 17.09 28.7611 16.53C28.6911 16.43 28.7611 16.31 28.9411 16.18C29.2873 15.9441 29.6211 15.6904 29.9411 15.42C30.1229 15.2694 30.2965 15.1092 30.4611 14.94C30.6274 14.7782 30.8045 14.6278 30.9911 14.49C31.0511 14.49 31.1911 14.49 31.4311 14.56L36.6511 16.46C37.1211 16.64 37.8111 16.88 38.7411 17.2C38.8153 17.2322 38.8953 17.2488 38.9761 17.2488C39.057 17.2488 39.137 17.2322 39.2111 17.2C39.2711 17.2 39.2111 16.94 38.9211 16.56C38.6311 16.18 38.0311 15.3 37.2911 14.31C36.5511 13.32 36.0011 12.59 35.6511 12.07C35.5311 11.89 35.5211 11.77 35.6511 11.7C35.9411 11.51 36.3711 11.2 36.9411 10.78C37.5111 10.36 37.9411 10.05 38.2411 9.85998C38.3111 9.79998 38.4111 9.83998 38.5111 9.99998Z\" fill=\"white\"/>\r\n                <path d=\"M51.4111 10.37C51.5198 10.6209 51.5759 10.8915 51.5759 11.165C51.5759 11.4385 51.5198 11.709 51.4111 11.96C51.3121 12.2153 51.1618 12.4476 50.9694 12.6425C50.777 12.8374 50.5466 12.9907 50.2925 13.0929C50.0384 13.195 49.7661 13.244 49.4923 13.2366C49.2186 13.2292 48.9493 13.1657 48.7011 13.05C48.1933 12.8289 47.7941 12.4152 47.5911 11.9C47.4824 11.649 47.4263 11.3785 47.4263 11.105C47.4263 10.8315 47.4824 10.5609 47.5911 10.31C47.69 10.0546 47.8404 9.82233 48.0328 9.62746C48.2252 9.43259 48.4555 9.27931 48.7096 9.17712C48.9637 9.07493 49.236 9.02601 49.5098 9.03338C49.7835 9.04075 50.0529 9.10427 50.3011 9.21999C50.5552 9.32506 50.7849 9.48142 50.9759 9.67929C51.1669 9.87716 51.3151 10.1123 51.4111 10.37Z\" fill=\"white\"/>\r\n                <path d=\"M72.8911 4.42C72.8911 4.42 72.5311 5.68 71.7911 8.16C71.0511 10.64 70.6111 12.11 70.5011 12.42C70.4835 12.4853 70.46 12.5489 70.4311 12.61C70.3895 12.6591 70.3335 12.6941 70.2711 12.71C69.8719 12.8243 69.4638 12.9046 69.0511 12.95C68.6644 13.0173 68.2734 13.0574 67.8811 13.07H67.6611C67.6141 13.0233 67.5707 12.9731 67.5311 12.92C67.5311 12.86 67.2611 12.48 66.8511 11.76L65.5511 9.49L64.9411 12C64.8811 12.29 64.7811 12.72 64.6311 13.27C64.609 13.3417 64.5753 13.4093 64.5311 13.47C64.4731 13.5101 64.4089 13.5405 64.3411 13.56C63.9695 13.6549 63.592 13.7251 63.2111 13.77C62.7953 13.8488 62.3741 13.8956 61.9511 13.91C61.8906 13.8974 61.8339 13.871 61.7853 13.8329C61.7367 13.7947 61.6976 13.7458 61.6711 13.69C60.0227 11.4534 58.5164 9.11547 57.1611 6.69C57.0911 6.23 57.0111 5.53 56.9011 4.6C56.7911 3.67 56.7111 3 56.6511 2.54C56.6511 2.35 56.6511 2.25 56.7811 2.23C57.1111 2.23 57.6111 2.13 58.2811 2.06C58.9511 1.99 59.4611 1.93 59.8011 1.88C59.9311 1.88 60.0111 1.88 60.0211 2.01C60.0911 2.48 60.1711 3.18 60.2711 4.12C60.3711 5.06 60.4411 5.77 60.5111 6.23C60.7363 6.78873 61.032 7.31635 61.3911 7.8C61.8911 8.58 62.2511 9.1 62.4711 9.37C62.6911 9.64 62.6511 9.58 62.6811 9.57C62.8066 9.29165 62.8844 8.99416 62.9111 8.69C63.1377 7.74091 63.2816 6.77395 63.3411 5.8C63.2911 5.26 63.1911 4.58 63.0511 3.8C62.8611 2.62 62.7511 1.94 62.7311 1.8C62.7168 1.73411 62.7168 1.66589 62.7311 1.6C62.7882 1.56042 62.8529 1.53318 62.9211 1.52C63.4227 1.40087 63.93 1.30741 64.4411 1.24C65.5511 1.08 66.1111 1.08 66.1311 1.24C66.1911 1.63 66.2711 2.24 66.3611 3.06C66.4511 3.88 66.5211 4.46 66.5911 4.87L66.6511 5.32C67.0164 6.22809 67.4685 7.09879 68.0011 7.92C68.2911 8.44 68.4511 8.7 68.4911 8.69C68.5311 8.68 68.5611 8.61 68.6311 8.44C68.7011 8.27 68.9311 7.53 69.1611 6.64C69.3536 6.08427 69.4746 5.50629 69.5211 4.92C69.4611 4.45 69.3311 3.75 69.1511 2.82C68.9711 1.89 68.8411 1.19 68.7811 0.73C68.7811 0.62 68.7811 0.56 68.9511 0.54C69.3011 0.49 69.8111 0.4 70.4911 0.27C71.1711 0.14 71.6411 0.05 72.0011 0C72.1111 0 72.1811 0.09 72.2111 0.33C72.2811 0.78 72.4011 1.47 72.5611 2.33C72.7211 3.19 72.8311 4 72.8911 4.42Z\" fill=\"white\"/>\r\n                <path d=\"M87.361 7.24997C87.2709 8.9525 86.5084 10.5496 85.241 11.69C84.6028 12.2369 83.8623 12.6514 83.0625 12.9095C82.2626 13.1676 81.4195 13.2641 80.582 13.1934C79.7445 13.1227 78.9294 12.8862 78.1842 12.4976C77.439 12.109 76.7784 11.5761 76.241 10.93C75.7119 10.2746 75.3176 9.52107 75.0808 8.71275C74.844 7.90443 74.7693 7.05726 74.861 6.21997C74.9574 4.51475 75.7272 2.91764 77.001 1.77997C77.6343 1.22419 78.373 0.801531 79.1731 0.537175C79.9731 0.272818 80.8182 0.172167 81.658 0.241214C82.4977 0.310262 83.315 0.547596 84.0612 0.939084C84.8073 1.33057 85.467 1.86821 86.001 2.51997C87.0597 3.85592 87.5485 5.55571 87.361 7.24997ZM84.001 6.99997C84.0947 6.18383 83.8769 5.36239 83.391 4.69997C83.155 4.37337 82.8506 4.1022 82.499 3.90536C82.1474 3.70852 81.7571 3.59076 81.3553 3.5603C80.9535 3.52983 80.5499 3.58739 80.1727 3.72896C79.7954 3.87052 79.4536 4.0927 79.171 4.37997C78.5852 4.94966 78.2293 5.71488 78.171 6.52997C78.0803 7.34441 78.294 8.16363 78.771 8.82997C79.0156 9.15028 79.3255 9.41487 79.6802 9.60615C80.0349 9.79744 80.4263 9.91105 80.8283 9.93943C81.2303 9.9678 81.6337 9.9103 82.0118 9.77073C82.3899 9.63117 82.7339 9.41274 83.021 9.12997C83.6029 8.56778 83.9527 7.80766 84.001 6.99997Z\" fill=\"white\"/>\r\n                <path d=\"M97.711 16.37C97.711 16.37 97.631 16.42 97.521 16.37C96.9688 16.2759 96.4241 16.1422 95.891 15.97C95.3823 15.8425 94.8815 15.6856 94.391 15.5C94.3201 15.4758 94.2529 15.4422 94.191 15.4C94.191 15.4 94.191 15.31 94.121 15.2C94.051 15.09 94.071 14.59 94.021 14.11C93.971 13.63 93.851 12.56 93.691 11.33C93.691 11.08 93.451 10.89 93.091 10.77C93.251 10.83 92.961 10.77 92.211 10.54C92.131 10.54 92.041 10.65 91.961 10.94C91.881 11.23 91.731 11.94 91.591 12.69C91.451 13.44 91.321 14.05 91.221 14.43C91.221 14.53 91.151 14.58 91.091 14.58H90.851C90.511 14.51 89.991 14.38 89.281 14.18C88.7934 14.0556 88.3127 13.9054 87.841 13.73C87.7751 13.7051 87.721 13.6563 87.6895 13.5933C87.658 13.5302 87.6514 13.4577 87.671 13.39C87.841 12.77 88.131 11.84 88.541 10.61C88.951 9.38 89.241 8.44 89.421 7.81C90.081 5.43 90.551 3.55 90.811 2.18V2.06C90.811 1.96 90.941 1.92 91.131 1.94C91.321 1.96 92.191 2.16 93.751 2.56L96.251 3.22C97.3949 3.48666 98.4245 4.11 99.191 5C99.5499 5.44502 99.7919 5.97271 99.8949 6.53507C99.998 7.09743 99.9588 7.67663 99.781 8.22C99.6181 8.90543 99.3076 9.54703 98.871 10.1C98.3976 10.5895 97.81 10.9538 97.161 11.16C97.001 11.22 96.921 11.28 96.891 11.36C96.861 11.44 97.041 12.16 97.331 13.78C97.5318 14.6308 97.6589 15.4974 97.711 16.37ZM96.271 7.78C96.3823 7.51179 96.4159 7.21772 96.3682 6.9313C96.3205 6.64488 96.1932 6.37763 96.001 6.16C95.5552 5.78229 95.0226 5.52115 94.451 5.4C93.911 5.25 93.601 5.25 93.521 5.4C93.441 5.55 93.271 6.13 93.011 7.04C93.011 7.17 92.921 7.36 92.861 7.62C92.801 7.88 92.741 8.06 92.711 8.19C92.681 8.32 92.781 8.27 92.961 8.35C93.2979 8.50467 93.6455 8.63501 94.001 8.74C95.241 9.08 96.001 8.76 96.271 7.78Z\" fill=\"white\"/>\r\n                <path d=\"M108.091 20.92C108.054 21.0216 107.983 21.1076 107.89 21.1639C107.798 21.2202 107.689 21.2435 107.581 21.23C107.134 21.0985 106.702 20.9209 106.291 20.7C105.809 20.4843 105.348 20.2266 104.911 19.93C104.816 19.8751 104.734 19.8 104.671 19.71C104.622 19.6179 104.597 19.5144 104.601 19.41L104.481 16.73C104.464 15.9196 104.394 15.1112 104.271 14.31C103.601 14.24 103.271 14.25 103.201 14.31C103.011 14.7 102.731 15.31 102.381 16.12C102.031 16.93 101.751 17.54 101.561 17.95C101.55 17.9845 101.532 18.0165 101.508 18.0439C101.484 18.0713 101.455 18.0936 101.422 18.1095C101.39 18.1253 101.354 18.1344 101.318 18.1362C101.282 18.1381 101.245 18.1325 101.211 18.12C100.691 17.9327 100.183 17.7122 99.6911 17.46C99.2306 17.2533 98.786 17.0126 98.3611 16.74C98.3003 16.708 98.2545 16.6533 98.2339 16.5877C98.2133 16.5221 98.2195 16.451 98.2511 16.39C98.5211 15.82 98.9711 14.97 99.5811 13.85C100.191 12.73 100.581 11.85 100.911 11.3C101.241 10.75 101.621 9.74999 102.161 8.49999C102.701 7.24999 103.161 6.31999 103.421 5.70999C103.428 5.68496 103.441 5.6619 103.458 5.64258C103.476 5.62326 103.497 5.60818 103.522 5.59852C103.546 5.58886 103.572 5.58487 103.598 5.58686C103.624 5.58885 103.649 5.59676 103.671 5.60999L104.401 5.98999C104.721 6.16999 104.961 6.29999 105.121 6.36999C105.281 6.43999 105.551 6.56999 105.891 6.70999L106.641 7.04999C106.731 7.04999 106.751 7.15999 106.711 7.25999C106.521 7.64999 106.221 8.25999 105.801 8.99999C105.381 9.73999 105.071 10.35 104.881 10.74C104.691 11.13 104.681 11.48 104.881 11.6C105.407 11.8879 106.025 11.9562 106.601 11.79C107.145 11.5545 107.638 11.2148 108.051 10.79C108.471 10.3633 109.111 9.74332 109.971 8.92999C110.04 8.88524 110.119 8.86141 110.201 8.86141C110.283 8.86141 110.363 8.88524 110.431 8.92999L111.041 9.25999C111.239 9.37746 111.442 9.48428 111.651 9.57999C111.791 9.64999 112.001 9.74999 112.291 9.86999L112.931 10.16C112.958 10.1692 112.983 10.1844 113.003 10.2045C113.023 10.2246 113.039 10.249 113.049 10.2759C113.058 10.3028 113.062 10.3315 113.059 10.3599C113.056 10.3883 113.046 10.4157 113.031 10.44C112.756 10.8438 112.438 11.2161 112.081 11.55C110.461 13.23 109.108 14.1133 108.021 14.2C107.801 14.2 107.671 14.25 107.641 14.32C107.611 14.39 107.751 15.32 107.961 17.39C108.175 18.5542 108.219 19.7432 108.091 20.92Z\" fill=\"white\"/>\r\n                <path d=\"M118.811 21.36C118.651 21.5834 118.447 21.7716 118.211 21.9126C117.976 22.0537 117.714 22.1447 117.441 22.18C117.172 22.225 116.897 22.2146 116.632 22.1492C116.367 22.0839 116.118 21.965 115.901 21.8C115.682 21.6362 115.499 21.4293 115.363 21.1919C115.227 20.9545 115.141 20.6918 115.111 20.42C115.042 19.8723 115.19 19.3193 115.522 18.8786C115.854 18.4379 116.346 18.1442 116.891 18.06C117.161 18.0133 117.437 18.0225 117.703 18.087C117.969 18.1514 118.219 18.2698 118.438 18.4348C118.656 18.5998 118.838 18.8079 118.973 19.0461C119.108 19.2844 119.192 19.5478 119.221 19.82C119.262 20.0911 119.247 20.3677 119.176 20.6326C119.106 20.8975 118.981 21.1451 118.811 21.36Z\" fill=\"white\"/>\r\n            </svg>\r\n            <svg className=\"scroller__inner\" width=\"29\" height=\"35\" viewBox=\"0 0 29 35\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M14.3899 0V30.1496\" stroke=\"#F4F4F4\" strokeWidth=\"7\"/>\r\n                <path d=\"M3 20.7697L14.3898 30.1495L25.7797 20.7697\" stroke=\"#F4F4F4\" strokeWidth=\"7\"/>\r\n            </svg>  \r\n        </article>\r\n    )\r\n}\r\n\r\nexport default Scroller\r\n","import './HandScroll.scss'\r\nimport HandTop from '../../assets/HandTop.png'\r\nimport HandBottom from '../../assets/HandBottom.png'\r\nimport Scroller from '../Scroller/Scroller'\r\n\r\nconst HandScroll = () => {\r\n    return (\r\n        <article className=\"hand-scroll\">\r\n            <div className=\"hand-scroll__hand-top\">\r\n                <img src={HandTop}/>\r\n            </div>\r\n\r\n            <Scroller />\r\n\r\n            <div className=\"hand-scroll__hand-bottom\">\r\n                <img src={HandBottom}/>\r\n            </div>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default HandScroll\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Icon } from '@iconify/react';\r\nimport arrowRightIcon from '@iconify/icons-heroicons-outline/arrow-sm-right';\r\n\r\nconst ProjectLink = ({title, reference}) => {\r\n    return (\r\n        <a className=\"main-button\" href={\"/project/\" + reference}>\r\n            <p className=\"main-button__title\">\r\n                {title}\r\n            </p>\r\n            <div className=\"main-button__action\">\r\n                <Icon className=\"iconify\" icon={arrowRightIcon} />\r\n            </div>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default ProjectLink\r\n","import './Project.scss'\r\nimport penIcon from '@iconify/icons-bx/bx-pen'\r\nimport codeIcon from '@iconify/icons-gg/brackets'\r\nimport userIcon from '@iconify/icons-bx/bx-user-pin'\r\nimport Icon from '@iconify/react'\r\nimport ProjectLink from './ProjectLink/ProjectLink'\r\n\r\n\r\nconst Project = ({ name, id, tags, type, images, number}) => {\r\n    return (\r\n        <section className=\"project\">\r\n\r\n            <section className=\"project__info\">\r\n                <section className=\"tags\">\r\n                    {tags.includes(\"ui\") && <Icon className=\"iconify\" icon={penIcon} />}\r\n                    {tags.includes(\"dev\") && <Icon className=\"iconify\" icon={codeIcon} />}\r\n                    {tags.includes(\"ux\") && <Icon className=\"iconify\" icon={userIcon} />}\r\n                </section>\r\n                <div className=\"project__name-container\">\r\n                    <p className=\"project__previous\">04</p>\r\n                    <p className=\"project__current\">0{number+1}</p>\r\n                    <h3 className=\"project__name\">{name}</h3>\r\n                </div>\r\n                <ProjectLink title=\"View Project\" reference={id}/>\r\n            </section>\r\n            <section className={\"project__images project__images--\" + type}>\r\n            {type !== \"responsive\" ? \r\n                images.map((image) => (<img src={image}></img>)) :\r\n                images.map((image) => (<div className={\"project__responsive-\"+image.type}><img src={image.url}/></div>))\r\n            }\r\n            </section>\r\n            \r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Project\r\n","import './StatusScrollBar.scss'\r\n\r\nconst StatusScrollBar = ({projects}) => {\r\n    return (\r\n\r\n        <article className=\"status-scrollbar\">\r\n            {projects.map((item) => (\r\n                <div className=\"status-scrollbar__item\">\r\n                    <p>{item.name}</p>\r\n                </div>\r\n            ))}\r\n            \r\n        </article>\r\n    )\r\n}\r\n\r\nexport default StatusScrollBar\r\n","import './Home.scss'\r\nimport ProeficienciesResume from '../../components/ProeficienciesResume/ProeficienciesResume'\r\nimport HandScroll from '../../components/HandScroll/HandScroll'\r\nimport Project from '../../components/Project/Project'\r\nimport StatusScrollBar from '../../components/StatusScrollBar/StatusScrollBar'\r\n\r\nconst Home = ({ proeficiencies, projects }) => {\r\n    return (\r\n        <section className=\"home\">\r\n            <section className=\"home__intro\">\r\n                <section className=\"home__intro-container\">\r\n                    <h2 className=\"home__intro-container-subtitle\">Building interfaces that can</h2>\r\n                    <h1 className=\"home__intro-container-title\">Change the world</h1>\r\n                    <p className=\"home__intro-container-text\">I use UI Design and Development as tools to build experiences.</p>\r\n                    <ProeficienciesResume proeficiencies={proeficiencies} />\r\n                </section>\r\n                \r\n                <HandScroll />\r\n            </section>\r\n            <section className=\"home__projects-container\">\r\n                <section className=\"home__projects\">\r\n                    <section className=\"home__projects-wrapper\">\r\n                        {projects.map((item, index) => (<Project key={item.id} number={index} name={item.name} id={item.id} tags={item.tags} type={item.project_type} images={item.images}/>))}\r\n                    </section>\r\n                </section>\r\n                <StatusScrollBar projects={projects} />\r\n            </section>\r\n           \r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","export default __webpack_public_path__ + \"static/media/logo.5501f974.svg\";","import { Icon } from '@iconify/react';\r\n\r\nconst Item = ({ title, icon }) => {\r\n    return (\r\n        <section className=\"abilities__item\">\r\n            <p className=\"abilities__item-title\">{title}</p>\r\n            <div className=\"abilities__item-icon\">\r\n                <Icon className=\"iconify\" icon={icon} />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Item\r\n","import './Abilities.scss'\r\nimport Item from './Item/Item'\r\n\r\nconst Abilities = ({ abilities }) => {\r\n    return (\r\n        <article className=\"abilities\">\r\n            {abilities.map((item) => (<Item key={item.id} icon={item.icon} title={item.title}/>))}\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default Abilities\r\n","import PropTypes from 'prop-types';\r\nimport './Button.scss'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Icon } from '@iconify/react';\r\nimport arrowRightIcon from '@iconify/icons-heroicons-outline/arrow-sm-right';\r\n\r\nconst Button = ({ title, reference}) => {\r\n    return (\r\n        <Link className=\"main-button\" to={reference} replace>\r\n            <p className=\"main-button__title\">\r\n                {title}\r\n            </p>\r\n            <div className=\"main-button__action\">\r\n                <Icon className=\"iconify\" icon={arrowRightIcon} />\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    title: 'Text by default'\r\n}\r\n\r\nButton.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Button\r\n","function Item( { title, text }) {\r\n    return (\r\n        <section className=\"disciplines__item\">\r\n            <h4 className=\"disciplines__item-title\">{title}</h4>\r\n            <p className=\"disciplines__item-text\">{text}</p>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Item\r\n","import './Disciplines.scss';\r\nimport Item from './Item/Item';\r\n\r\nfunction Disciplines( { discplines} ) {\r\n    return (\r\n        <article className=\"disciplines\">\r\n            <h3 className=\"disciplines__title\">My competencies</h3>\r\n            {discplines.map((item) => (<Item key={item.id} title={item.title} text={item.text}/>))}\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default Disciplines\r\n","export default __webpack_public_path__ + \"static/media/ProfilePhoto.8833c418.png\";","import './ProfilePhoto.scss';\r\nimport photo from '../../assets/ProfilePhoto.png'\r\n\r\nconst ProfilePhoto = () => {\r\n    return (\r\n        <article className=\"profile-photo\">\r\n            <img src={photo} alt=\"Cristian Rodríguez\"/>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default ProfilePhoto\r\n","import { Icon } from '@iconify/react';\r\nimport arrowRightIcon from '@iconify/icons-heroicons-outline/arrow-sm-right';\r\n\r\nconst Item = ({ name, icon, url }) => {\r\n    return (\r\n        <a className=\"social-media__item\" href={url}>\r\n            <Icon className=\"social-media__item-icon iconify\" icon={icon} />\r\n            <p className=\"social-media__item-title\">{name}</p>\r\n            <div className=\"social-media__item-action\">\r\n                <Icon className=\"iconify\" icon={arrowRightIcon} />\r\n            </div>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default Item\r\n","import './SocialMedia.scss'\r\nimport Item from './Item/Item'\r\n\r\n\r\nconst SocialMedia = ( { socials } ) => {\r\n    return (\r\n        <article className=\"social-media\">\r\n            {socials.map((item) => (<Item key={item.id} icon={item.icon} name={item.title} url={item.url}/>))}\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default SocialMedia\r\n","import Abilities from '../../components/Abilities/Abilities'\r\nimport Button from '../../components/Button/Button'\r\nimport Disciplines from '../../components/Disciplines/Disciplines'\r\nimport HandScroll from '../../components/HandScroll/HandScroll'\r\nimport ProeficienciesResume from '../../components/ProeficienciesResume/ProeficienciesResume'\r\nimport ProfilePhoto from '../../components/ProfilePhoto/ProfilePhoto'\r\nimport SocialMedia from '../../components/SocialMedia/SocialMedia'\r\nimport './AboutMe.scss'\r\n\r\nconst AboutMe = ({ socials, proeficiencies, abilities, discplines }) => {\r\n    return (\r\n        <section className=\"about-me\">\r\n            <section className=\"about-me__intro\">\r\n                <section className=\"about-me__intro-container\">\r\n                    <ProfilePhoto />\r\n                    <SocialMedia socials={socials} />\r\n                    <h1 className=\"about-me__intro-container-title\">Hi! I’m Cristian</h1>\r\n                    <ProeficienciesResume proeficiencies={proeficiencies}/>\r\n                    <p className=\"about-me__intro-container-text\">I'm an Interactive Media Designer passionate about technology and design, looking for new opportunities to understand the best practices of coding.</p>\r\n                    <p className=\"about-me__intro-container-text\">As a developer, I have been able to use my advanced knowledge of UX, UI, and HCI in order to improve accessibility and modularity on the projects I have worked on. Moreover, my knowledge about the product development process allows me to see the whole picture since the beginning, which is very helpful to build the whole production code from scratch; this has given me the opportunity on different projects of intercommunicating with several members of a team by prioritizing tasks in order to achieve a Minimum Viable Product (MVP).</p>\r\n                    <Abilities abilities={abilities}/>\r\n                </section>\r\n                <HandScroll />\r\n            </section>\r\n            <Disciplines discplines={discplines} />\r\n            <Button title=\"Go to Home\" reference=\"/\"/>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default AboutMe\r\n","export default __webpack_public_path__ + \"static/media/kal1.326b3e68.png\";","export default __webpack_public_path__ + \"static/media/kal-back.46695f65.png\";","export default __webpack_public_path__ + \"static/media/KalContent1.836fb277.jpg\";","export default __webpack_public_path__ + \"static/media/KalContent2.dd046999.jpg\";","export default __webpack_public_path__ + \"static/media/cremosos1.010c32b0.png\";","export default __webpack_public_path__ + \"static/media/cremosos2.0fba5455.png\";","export default __webpack_public_path__ + \"static/media/cremosos-desk.adcab22d.png\";","export default __webpack_public_path__ + \"static/media/cremosos-back.338992d0.png\";","export default __webpack_public_path__ + \"static/media/CremososContent1.c584b1e2.jpg\";","export default __webpack_public_path__ + \"static/media/CremososContent2.e6a17345.jpg\";","export default __webpack_public_path__ + \"static/media/medot1.ebc92722.png\";","export default __webpack_public_path__ + \"static/media/medot2.709b12fa.png\";","export default __webpack_public_path__ + \"static/media/medot-back.b80ea413.png\";","import penIcon from '@iconify/icons-bx/bx-pen'\r\nimport codeIcon from '@iconify/icons-gg/brackets'\r\nimport userIcon from '@iconify/icons-bx/bx-user-pin'\r\nimport Icon from '@iconify/react'\r\nimport SocialMedia from '../../../components/SocialMedia/SocialMedia'\r\n\r\nconst ProjectDetailHeader = ({ name, tags, image, socialMedia}) => {\r\n    return (\r\n        <section className=\"project-detail__header\">\r\n            <section className=\"project-detail__header-info\">\r\n                <section className=\"tags\">\r\n                    {tags.includes(\"ui\") && <Icon className=\"iconify\" icon={penIcon} />}\r\n                    {tags.includes(\"dev\") && <Icon className=\"iconify\" icon={codeIcon} />}\r\n                    {tags.includes(\"ux\") && <Icon className=\"iconify\" icon={userIcon} />}\r\n                </section>\r\n                <h2 className=\"project-detail__name\">{name}</h2>\r\n                <SocialMedia socials={socialMedia} />\r\n            </section>\r\n            <img className=\"project-detail__header-background\" src={image} alt=\"\"/>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ProjectDetailHeader\r\n","export default __webpack_public_path__ + \"static/media/aventi1.1b88d41a.png\";","export default __webpack_public_path__ + \"static/media/aventi2.e90bc68e.png\";","export default __webpack_public_path__ + \"static/media/aventi3.fb8c4c61.png\";","\r\nconst ProjectDetailed = ({projectContent}) => {\r\n    return (\r\n        <section className=\"project-detail__container\">\r\n            \r\n            {projectContent.map((content) => {\r\n                if (content.type == \"text\") {\r\n                    return <section className={\"project-detail__content project-detail__content--\" + content.type}>\r\n                        <h4 className=\"project-detail__content-title\">{content.title}</h4>\r\n                        <p className=\"project-detail__content-text\">{content.content}</p>\r\n                    </section>\r\n                } else {\r\n                    return <section className={\"project-detail__content project-detail__content--\" + content.type}>\r\n                        <img src={content.url} alt=\"\"/>\r\n                    </section>\r\n                }\r\n            })}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ProjectDetailed\r\n","import { useParams } from \"react-router\"\r\nimport \"./ProjectDetail.scss\"\r\nimport ProjectDetailHeader from \"./ProjectDetailHeader/ProjectDetailHeader\";\r\nimport ProjectDetailed from \"./ProjectDetailed/ProjectDetailed\";\r\n\r\nconst ProjectDetail = ({projects}) => {\r\n\r\n    const { id } = useParams();\r\n\r\n    return (\r\n        <>\r\n            {projects.filter(project => project.id === id).map(currentProject => (\r\n                <section className=\"project-detail\">\r\n                    <ProjectDetailHeader\r\n                        name={currentProject.name} \r\n                        tags={currentProject.tags} \r\n                        image={currentProject.backImage} \r\n                        socialMedia={currentProject.socialMedia} \r\n                    />\r\n                    <ProjectDetailed\r\n                        projectContent={currentProject.projectContent}\r\n                    />\r\n                </section>\r\n            ))}\r\n        </>  \r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default ProjectDetail\r\n","import { useState } from 'react'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\n\nimport Header from './components/Header/Header'\nimport Home from './containers/Home/Home'\nimport logo from './assets/logo.svg'\nimport AboutMe from './containers/AboutMe/AboutMe'\n\nimport githubIcon from '@iconify/icons-ant-design/github-filled'\nimport linkedinIcon from '@iconify/icons-ant-design/linkedin-filled'\nimport behanceIcon from '@iconify/icons-ant-design/behance-circle-filled'\nimport penIcon from '@iconify/icons-bx/bx-pen'\nimport codeIcon from '@iconify/icons-gg/brackets'\nimport userIcon from '@iconify/icons-bx/bx-user-pin'\nimport happyIcon from '@iconify/icons-heroicons-outline/emoji-happy'\nimport clipboardIcon from '@iconify/icons-heroicons-outline/clipboard-list'\nimport annotationIcon from '@iconify/icons-heroicons-outline/annotation'\nimport groupIcon from '@iconify/icons-heroicons-outline/user-group'\nimport figmaLogo from '@iconify/icons-ph/figma-logo';\n\nimport kal1 from './assets/Kal/kal1.png'\nimport kal_back from './assets/Kal/kal-back.png'\nimport kal_content_1 from './assets/Kal/KalContent1.jpg'\nimport kal_content_2 from './assets/Kal/KalContent2.jpg'\nimport cremosos1 from './assets/Cremosos/cremosos1.png'\nimport cremosos2 from './assets/Cremosos/cremosos2.png'\nimport cremososdesk from './assets/Cremosos/cremosos-desk.png'\nimport cremosos_back from './assets/Cremosos/cremosos-back.png'\nimport cremosos_content_1 from './assets/Cremosos/CremososContent1.jpg'\nimport cremosos_content_2 from './assets/Cremosos/CremososContent2.jpg'\n\nimport medot1 from './assets/Medot/medot1.png'\nimport medot2 from './assets/Medot/medot2.png'\nimport medot_back from './assets/Medot/medot-back.png'\nimport aventi1 from './assets/Aventi/aventi1.png'\nimport aventi2 from './assets/Aventi/aventi2.png'\nimport aventi3 from './assets/Aventi/aventi3.png'\nimport ProjectDetail from './containers/ProjectDetail/ProjectDetail'\n\n\nfunction App() {\n  const[socials] = useState([\n    {\n      title: \"My Github\",\n      icon: githubIcon,\n      url: '#',\n      id: 1\n    },\n    {\n        title: \"My LinkedIn\",\n        icon: linkedinIcon,\n        url: '#',\n        id: 2\n    },\n    {\n        title: \"My Behance\",\n        icon: behanceIcon,\n        url: '#',\n        id: 3\n    }\n  ]);\n  const[proeficiencies] = useState([\n    {\n      icon: penIcon,\n      title: \"UI Designer\",\n      id: 1\n    },\n    {\n        icon: codeIcon,\n        title: \"Front-end Developer\",\n        id: 2\n    },\n    {\n        icon: userIcon,\n        title: \"Front-end Developer\",\n        id: 3\n    }\n  ]);\n  const[discplines] = useState([\n      {\n          title: \"UX Design\",\n          text: \"I can take the requeriments of a new interface from scratch, realize user testings and prototypes in order to design an interface that achieve the expectations and needs of the target.\",\n          id: 1\n      },\n      {\n          title: \"Front-end Dev\",\n          text: \"I can estimate an interface and their funcitonal requeriments with attention and detail in order to code it without losing the design purpuse and aesthetic of the functionality, creating code modular and reusable, and using the best technologies and libraries to achieve the UI Design needs and requeriments.\",\n          id: 2\n      },\n      {\n          title: \"UX Design\",\n          text: \"I can translate requeriments into usable and desirable interfaces, prioritizing accesibility, making user testings  in order to validate that the user needs are being satisfied.\",\n          id: 3\n      }\n  ]);\n  const[abilities] = useState([\n    {\n      title: \"Teamworker\",\n      icon: happyIcon,\n      id: 1\n  },\n  {\n      title: \"Frustration Tolerant\",\n      icon: clipboardIcon,\n      id: 2\n  },\n  {\n      title: \"Task Prioritizer\",\n      icon: annotationIcon,\n      id: 3\n  },\n  {\n      title: \"Good Comunicator\",\n      icon: groupIcon,\n      id: 4\n  }\n  ]);\n  const[projects] = useState([\n    {\n      name: \"Kal\",\n      project_type: \"desktop\",\n      images: [kal1],\n      backImage: kal_back,\n      id: \"kal\",\n      tags: [\"ux\", \"ui\", \"dev\"],\n      socialMedia: [\n        {\n          title: \"View on Figma\",\n          icon: figmaLogo,\n          url: '#'\n        }\n      ],\n      projectContent: [{\n        type: \"text\",\n        title: 'The job to be done',\n        content: 'An agriculture enterprise on Cali needed to develop an application to track their machinery and their replacements. At the begginning the idea was very abstract and was necesary to divide the big picture into several steps to be sure of achieve the needs of the users. The process began from the creation of the brand and design parametres to the front-end development of the application with AngularJs.'\n      },{\n        type: \"text\",\n        title: 'The user',\n        content: 'The user were people from 25 to 30 years used to tracking and management applications. The forms was made with material design to approach the target and the contrast is high in the most of the visuals and screens.'\n      },{\n        type: 'onContentImage',\n        url: kal_content_1\n      },{\n        type: \"text\",\n        title: 'The challenge',\n        content: 'It was necessary to create a reusable and modular interface. Was made a design system and every module was created from these point.  The learning of new libraries and of Angular as a framework was also a challenge for me due to my experience with modular frameworks on Javascript. It empowered me to learn about new frameworks and technologies on the industry.'\n      },{\n        type: 'image',\n        url: kal_content_2\n      }]\n    },\n    {\n      name: \"Cremosos\",\n      project_type: \"responsive\",\n      images: [\n        {\n          type: \"mobile\",\n          url: cremosos1,\n        },\n        {\n          type: \"desktop\",\n          url: cremososdesk,\n        },\n        {\n          type: \"mobile\",\n          url: cremosos2,\n        },\n      ],\n      backImage: cremosos_back,\n      id: \"cremosos\",\n      tags: [\"ux\", \"ui\", \"dev\"],\n      socialMedia: [\n        {\n          title: \"View on Github\",\n          icon: githubIcon,\n          url: '#'\n        },\n        {\n          title: \"View on Behance\",\n          icon: behanceIcon,\n          url: '#'\n        }\n      ],\n      projectContent: [\n        ,{\n          type: \"text\",\n          title: 'The user',\n          content: 'It was a redesign of Ice Cream Nation’s Website. They needed to approach a new target between 18 and 22 years old. We decided to use a trivia by its engage and it’s ease of sharing on social media.'\n        },{\n          type: \"text\",\n          title: 'The characters',\n          content: 'Were selected vivid colors to attract people’s interest. The different colors and accesories were added to make it personanizable and easily recognizable.'\n        },{\n        type: 'onContentImage',\n        url: cremosos_content_1\n        },{\n          type: \"text\",\n          title: 'The challenge',\n          content: 'Were selected vivid colors to attract people’s interest. The different colors and accesories were added to make it personanizable and easily recognizable.'\n        },{\n        type: 'image',\n        url: cremosos_content_2\n        }\n    ]\n    },\n    {\n      name: \"Medot\",\n      project_type: \"mobile\",\n      images: [medot1, medot2],\n      backImage: medot_back,\n      id: \"medot\",\n      tags: [\"dev\"],\n      socialMedia: [\n        {\n          title: \"View on Github\",\n          icon: githubIcon,\n          url: '#'\n        }\n      ],\n      projectContent: [{\n        type: \"text\",\n        title: 'The project',\n        content: 'Medot is an application being developed in higher scale in Valle del Lili’s Hospital in Cali. The idea surged from the need of new doctors on practicing arterial intervention on real contexts. It was developed from scratch in a team of three people being me the one in charge of the development. Was needed rapid prototiping that’s why the application was developed with Vanilla Javascript and used for testing with real users in only three weeks with development sesions of three hours by week, prioritizing tasks in order to achieve every time a better MVP.'\n      },]\n    }\n  ]);\n\n  /*\n      {\n      name: \"Aventi\",\n      project_type: \"various\",\n      images: [aventi1, aventi2, aventi3],\n      id: \"aventi\",\n      tags: [\"ux\", \"ui\", \"dev\"]\n  }*/\n  return (\n    <Router>\n      <section className=\"main-container--blue\">\n        <Header logo={logo}/>\n        <main className=\"main-container--blue\">\n          <Switch> \n            <Route exact path='/' render={() => (\n              <>\n                <Home proeficiencies={proeficiencies} projects={projects}/>\n              </>\n            )}\n            />\n            <Route path='/about-me' render={(props) => (\n              <>\n                <AboutMe socials={socials} proeficiencies={proeficiencies} abilities={abilities} discplines={discplines}/>\n              </>\n            )}\n            />\n            <Route path='/project/:id'>\n              <ProjectDetail projects={projects} />\n            </Route>\n          </Switch>\n        </main>\n      </section>\n    </Router>\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}